@{
  var friendlyName = "Kotlin Standard Library";
  if (Model.Metadata.TryGetValue("friendlyName", out string name)) {
    friendlyName += " " + name;
  }
}
<Project Sdk="MSBuild.Sdk.Extras">

  <PropertyGroup>
    <TargetFramework>MonoAndroid9.0</TargetFramework>
    <IsBindingProject>true</IsBindingProject>
    <RootNamespace>Xamarin.Kotlin</RootNamespace>
    @if (!string.IsNullOrEmpty(Model.AssemblyName)) {
    <AssemblyName>@(Model.AssemblyName)</AssemblyName>
    } else {
    <AssemblyName>@(Model.NuGetPackageId)</AssemblyName>
    }
    <AndroidUseLatestPlatformSdk>False</AndroidUseLatestPlatformSdk>
    <AndroidUseIntermediateDesignerFile>True</AndroidUseIntermediateDesignerFile>
    <AndroidDexTool>d8</AndroidDexTool>
    <AndroidEnableDesugar>true</AndroidEnableDesugar>
    <!--
      No warnings for:
       - CS0618: 'member' is obsolete: 'text'
       - CS0109: The member 'member' does not hide an inherited member. The new keyword is not required
       - CS0114: 'function1' hides inherited member 'function2'. To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
       - CS0628: 'member' : new protected member declared in sealed class
       - CS0108: 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
       - CS0809: Obsolete member 'member' overrides non-obsolete member 'member'
    -->
    <NoWarn>0618;0109;0114;0628;0108;0809</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <AndroidClassParser>class-parse</AndroidClassParser>
    <AndroidCodegenTarget>XAJavaInterop1</AndroidCodegenTarget>
  </PropertyGroup>

  <PropertyGroup>
    <Version>1.0.0.0</Version>
    <FileVersion>@(Model.MavenArtifacts[0].MavenArtifactVersion)</FileVersion>
    <InformationalVersion>@(Model.NuGetVersion)</InformationalVersion>
    <PackageVersion>@(Model.NuGetVersion)</PackageVersion>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>@(Model.NuGetPackageId)</PackageId>
    <Title>@(friendlyName) for Xamarin.Android</Title>
    <Summary>Xamarin.Android binding for @(friendlyName)</Summary>
    <Description>Xamarin.Android binding for @(friendlyName)</Description>
    <PackageTags>Xamarin Kotlin Xamarin.Kotlin</PackageTags>
    <Authors>Microsoft</Authors>
    <Owners>Microsoft</Owners>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageProjectUrl>https://go.microsoft.com/fwlink/?linkid=864997</PackageProjectUrl>
    <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
    <!-- <PackageIconUrl></PackageIconUrl> -->
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <ItemGroup>
    <None Update="@(Model.NuGetPackageId).targets" Pack="True" PackagePath="build\$(TargetFramework)" />
    <None Update="@(Model.NuGetPackageId).targets" Pack="True" PackagePath="buildTransitive\$(TargetFramework)" />
  </ItemGroup>

  <ItemGroup>
    <TransformFile Include="..\..\source\@(Model.NuGetPackageId)\Transforms\*.xml" Link="Transforms\%(Filename)%(Extension)" />
    <TransformFile Include="..\..\source\Metadata.shared.xml" Link="Transforms\Metadata.shared.xml" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\source\@(Model.NuGetPackageId)\Additions\*.cs" Link="Additions\%(Filename)%(Extension)" />
  </ItemGroup>

  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
    <None Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).jar" Pack="True" PackagePath="jar\@(art.MavenGroupId).@(art.MavenArtifactId).jar" Visible="false" />
    <InputJar Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).jar" Link="Jars\@(art.MavenGroupId)\@(art.MavenArtifactId).jar" />
    }
  </ItemGroup>

  <ItemGroup>
    @foreach (var dep in @Model.NuGetDependencies) {
      if (dep.IsProjectReference) {
    <ProjectReference Include="..\..\generated\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId)\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId).csproj" PrivateAssets="none" />
      } else {
    <PackageReference Include="@(dep.NuGetPackageId)" Version="@(dep.NuGetVersion)" />
      }
    }
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\License.md" Pack="true" PackagePath="LICENSE.md" />
  </ItemGroup>

</Project>
