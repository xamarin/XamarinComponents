<?xml version="1.0" encoding="UTF-8"?>
<metadata>

  <!-- fix the reflection inheritance and generics -->
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KClass']/method[@name='getConstructors' and count(parameter)=0]" name="return">java.util.Collection&lt;kotlin.reflect.KFunction&lt;java.lang.Object&gt;&gt;</attr>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KClass']/method[@name='getMembers' and count(parameter)=0]" name="return">java.util.Collection&lt;kotlin.reflect.KCallable&lt;java.lang.Object&gt;&gt;</attr>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KClass']/method[@name='getNestedClasses' and count(parameter)=0]" name="return">java.util.Collection&lt;kotlin.reflect.KClass&lt;java.lang.Object&gt;&gt;</attr>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KClass']/method[@name='getSealedSubclasses' and count(parameter)=0]" name="return">java.util.List&lt;kotlin.reflect.KClass&lt;java.lang.Object&gt;&gt;</attr>
  <add-node path="/api/package/class[@name='PropertyReference']">
    <method abstract="true" deprecated="not deprecated" final="false" name="getGetter" native="false" return="kotlin.reflect.KProperty.Getter&lt;java.lang.Object&gt;" static="false" synchronized="false" visibility="public" />
  </add-node>
  <add-node path="/api/package/class[@name='PropertyReference0']">
    <method abstract="false" deprecated="not deprecated" final="false" name="get" native="false" return="java.lang.Object" static="false" synchronized="false" visibility="public" />
  </add-node>
  <add-node path="/api/package/class[@name='PropertyReference1']">
    <method abstract="false" deprecated="not deprecated" final="false" name="get" native="false" return="java.lang.Object" static="false" synchronized="false" visibility="public">
      <parameter name="p0" type="java.lang.Object" />
    </method>
  </add-node>
  <add-node path="/api/package/class[@name='PropertyReference2']">
    <method abstract="false" deprecated="not deprecated" final="false" name="get" native="false" return="java.lang.Object" static="false" synchronized="false" visibility="public">
      <parameter name="p0" type="java.lang.Object" />
      <parameter name="p1" type="java.lang.Object" />
    </method>
  </add-node>
  <add-node path="/api/package/class[@name='MutablePropertyReference']">
    <method abstract="true" deprecated="not deprecated" final="false" name="getSetter" native="false" return="kotlin.reflect.KMutableProperty.Setter&lt;java.lang.Object&gt;" static="false" synchronized="false" visibility="public" />
  </add-node>
  <add-node path="/api/package/class[@name='MutablePropertyReference0']">
    <method abstract="false" deprecated="not deprecated" final="false" name="get" native="false" return="java.lang.Object" static="false" synchronized="false" visibility="public" />
    <method abstract="false" deprecated="not deprecated" final="false" name="set" native="false" return="void" static="false" synchronized="false" visibility="public">
      <parameter name="p0" type="java.lang.Object" />
    </method>
  </add-node>
  <add-node path="/api/package/class[@name='MutablePropertyReference1']">
    <method abstract="false" deprecated="not deprecated" final="false" name="get" native="false" return="java.lang.Object" static="false" synchronized="false" visibility="public">
      <parameter name="p0" type="java.lang.Object" />
    </method>
    <method abstract="false" deprecated="not deprecated" final="false" name="set" native="false" return="void" static="false" synchronized="false" visibility="public">
      <parameter name="p0" type="java.lang.Object" />
      <parameter name="p1" type="java.lang.Object" />
    </method>
  </add-node>
  <add-node path="/api/package/class[@name='MutablePropertyReference2']">
    <method abstract="false" deprecated="not deprecated" final="false" name="get" native="false" return="java.lang.Object" static="false" synchronized="false" visibility="public">
      <parameter name="p0" type="java.lang.Object" />
      <parameter name="p01" type="java.lang.Object" />
    </method>
    <method abstract="false" deprecated="not deprecated" final="false" name="set" native="false" return="void" static="false" synchronized="false" visibility="public">
      <parameter name="p0" type="java.lang.Object" />
      <parameter name="p1" type="java.lang.Object" />
      <parameter name="p2" type="java.lang.Object" />
    </method>
  </add-node>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KProperty0']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KProperty1']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KProperty2']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KMutableProperty0']/method[@name='getSetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKMutablePropertySetter</attr>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KMutableProperty1']/method[@name='getSetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKMutablePropertySetter</attr>
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KMutableProperty2']/method[@name='getSetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKMutablePropertySetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='PropertyReference0']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='PropertyReference1']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='PropertyReference2']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='MutablePropertyReference0']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='MutablePropertyReference0']/method[@name='getSetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKMutablePropertySetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='MutablePropertyReference1']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='MutablePropertyReference1']/method[@name='getSetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKMutablePropertySetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='MutablePropertyReference2']/method[@name='getGetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKPropertyGetter</attr>
  <attr path="/api/package[@name='kotlin.jvm.internal']/class[@name='MutablePropertyReference2']/method[@name='getSetter' and count(parameter)=0]" name="managedReturn">Kotlin.Reflect.IKMutablePropertySetter</attr>

  <!-- fix some weird issues -->
  <attr path="/api/package[@name='kotlin.reflect']/interface[@name='KCallable']/method[@name='callBy' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;kotlin.reflect.KParameter, ? extends java.lang.Object&gt;']]/parameter[1]" name="type">java.util.Map</attr>
  <attr path="/api/package/class[implements[@name='java.util.Collection']]/method[@name='addAll' and count(parameter)=1 and parameter[1][starts-with(@type,'java.util.Collection')]]/parameter[1]" name="type">java.util.Collection</attr>
  <attr path="/api/package/class[implements[@name='java.util.Collection']]/method[@name='containsAll' and count(parameter)=1 and parameter[1][starts-with(@type,'java.util.Collection')]]/parameter[1]" name="type">java.util.Collection</attr>
  <attr path="/api/package/class[implements[@name='java.util.Collection']]/method[@name='removeAll' and count(parameter)=1 and parameter[1][starts-with(@type,'java.util.Collection')]]/parameter[1]" name="type">java.util.Collection</attr>
  <attr path="/api/package/class[implements[@name='java.util.Collection']]/method[@name='retainAll' and count(parameter)=1 and parameter[1][starts-with(@type,'java.util.Collection')]]/parameter[1]" name="type">java.util.Collection</attr>

  <!-- fix inheritance -->
  <attr path="/api/package/class[@extends='kotlin.jvm.internal.PrimitiveSpreadBuilder']/method[@name='getSize' and count(parameter)=1]/parameter[1]" name="type">java.lang.Object</attr>
  <attr path="/api/package/class[implements[@name='java.lang.Comparable']]/method[@name='compareTo' and count(parameter)=1]/parameter[1]" name="managedType">Java.Lang.Object</attr>
  <attr path="/api/package/class[implements[@name='java.lang.Iterable']]/method[@name='iterator' and count(parameter)=0]" name="managedReturn">Java.Util.IIterator</attr>
  <attr path="/api/package/class[implements[@name='java.util.Collection']]/method[starts-with(@name,'add-') and count(parameter)=1]/parameter[1]" name="managedType">Java.Lang.Object</attr>
  <remove-node path="/api/package/class[implements[@name='java.util.Collection'] and @final='true']/method[@name='getSize' and count(parameter)=0]" />
  <add-node path="/api/package/class[implements[@name='java.lang.Comparable'] and @final='true' and count(method[@name='compareTo'])=0]">
    <method abstract="false" deprecated="not deprecated" final="false" name="compareTo" native="false" return="int" static="false" synchronized="false" visibility="public">
      <parameter name="p0" type="java.lang.Object" />
    </method>
  </add-node>
  <attr path="/api/package/class[implements[@name='java.util.Collection']]/method[@name='iterator' and count(parameter)=0]" name="managedReturn">Java.Util.IIterator</attr>
  <attr path="/api/package/class[implements[@name='java.util.Iterator']]/method[@name='next' and count(parameter)=0]" name="managedReturn">Java.Lang.Object</attr>
  <attr path="/api/package/class[implements[@name='java.util.Iterator']]/method[starts-with(@name,'next-') and count(parameter)=0]" name="return">java.lang.Object</attr>
  <attr path="/api/package/class[implements[@name='java.util.Map']]/method[@name='entrySet' and count(parameter)=0]" name="return">java.util.Set</attr>

  <attr path="/api/package[@name='kotlin.ranges']/class[@name='CharRange']/method[@name='contains' and count(parameter)=1 and parameter[1][@type='char']]/parameter[1]" name="managedType">Java.Lang.Character</attr>
  <attr path="/api/package[@name='kotlin.ranges']/class[@name='IntRange']/method[@name='contains' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedType">Java.Lang.Integer</attr>
  <attr path="/api/package[@name='kotlin.ranges']/class[@name='LongRange']/method[@name='contains' and count(parameter)=1 and parameter[1][@type='long']]/parameter[1]" name="managedType">Java.Lang.Long</attr>

  <remove-node path="/api/package[@name='kotlin.ranges']/class[@name='UIntRange']/implements[@name='kotlin.ranges.ClosedRange']" />
  <remove-node path="/api/package[@name='kotlin.ranges']/class[@name='ULongRange']/implements[@name='kotlin.ranges.ClosedRange']" />

  <!--  fix up the clash with the abstract members -->
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractCollection']/method[@name='getSize' and count(parameter)=0]" name="managedName">GetSize</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractCollection']/method[@name='getSize' and count(parameter)=0]" name="propertyName"></attr>
  <remove-node path="/api/package[@name='kotlin.collections']/class[@name='AbstractList']/method[@name='getSize' and count(parameter)=0]" />
  <remove-node path="/api/package[@name='kotlin.collections']/class[@name='AbstractMap']/method[@name='getSize' and count(parameter)=0]" />
  <remove-node path="/api/package[@name='kotlin.collections']/class[@name='AbstractMap']/method[@name='getValues' and count(parameter)=0]" />
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableCollection']/method[@name='getSize' and count(parameter)=0]" name="managedName">GetSize</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableCollection']/method[@name='getSize' and count(parameter)=0]" name="propertyName"></attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableMap']/method[@name='getSize' and count(parameter)=0]" name="managedName">GetSize</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableMap']/method[@name='getSize' and count(parameter)=0]" name="propertyName"></attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableMap']/method[@name='getValues' and count(parameter)=0]" name="managedName">GetValues</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableMap']/method[@name='getValues' and count(parameter)=0]" name="propertyName"></attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableList']/method[@name='getSize' and count(parameter)=0]" name="managedName">GetSize</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableList']/method[@name='getSize' and count(parameter)=0]" name="propertyName"></attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableSet']/method[@name='getSize' and count(parameter)=0]" name="managedName">GetSize</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='AbstractMutableSet']/method[@name='getSize' and count(parameter)=0]" name="propertyName"></attr>

  <!-- remove *Impl classes -->
  <remove-node path="/api/package/class[substring(@name,string-length(@name)-3)='Impl']" />

  <!-- fix some conflicting members -->
  <attr path="/api/package[@name='kotlin.annotation']/class[@name='AnnotationTarget']/field[@name='CLASS']" name="managedName">Klass</attr>

  <attr path="/api/package[@name='kotlin.sequences']/class[@name='SequencesKt___SequencesKt']/method[@name='max' and count(parameter)=1 and parameter[1][@type='kotlin.sequences.Sequence&lt;java.lang.Double&gt;']]" name="managedName">MaxOfDouble</attr>
  <attr path="/api/package[@name='kotlin.sequences']/class[@name='SequencesKt___SequencesKt']/method[@name='max' and count(parameter)=1 and parameter[1][@type='kotlin.sequences.Sequence&lt;java.lang.Float&gt;']]" name="managedName">MaxOfFloat</attr>
  <attr path="/api/package[@name='kotlin.sequences']/class[@name='SequencesKt___SequencesKt']/method[@name='min' and count(parameter)=1 and parameter[1][@type='kotlin.sequences.Sequence&lt;java.lang.Double&gt;']]" name="managedName">MinOfDouble</attr>
  <attr path="/api/package[@name='kotlin.sequences']/class[@name='SequencesKt___SequencesKt']/method[@name='min' and count(parameter)=1 and parameter[1][@type='kotlin.sequences.Sequence&lt;java.lang.Float&gt;']]" name="managedName">MinOfFloat</attr>

  <attr path="/api/package[@name='kotlin.sequences']/class[@name='SequencesKt___SequencesKt']/method[@name='maxOrNull' and count(parameter)=1 and parameter[1][@type='kotlin.sequences.Sequence&lt;java.lang.Double&gt;']]" name="managedName">MaxOrNullOfDouble</attr>
  <attr path="/api/package[@name='kotlin.sequences']/class[@name='SequencesKt___SequencesKt']/method[@name='maxOrNull' and count(parameter)=1 and parameter[1][@type='kotlin.sequences.Sequence&lt;java.lang.Float&gt;']]" name="managedName">MaxOrNullOfFloat</attr>
  <attr path="/api/package[@name='kotlin.sequences']/class[@name='SequencesKt___SequencesKt']/method[@name='minOrNull' and count(parameter)=1 and parameter[1][@type='kotlin.sequences.Sequence&lt;java.lang.Double&gt;']]" name="managedName">MinOrNullOfDouble</attr>
  <attr path="/api/package[@name='kotlin.sequences']/class[@name='SequencesKt___SequencesKt']/method[@name='minOrNull' and count(parameter)=1 and parameter[1][@type='kotlin.sequences.Sequence&lt;java.lang.Float&gt;']]" name="managedName">MinOrNullOfFloat</attr>

  <attr path="/api/package[@name='kotlin.collections']/class[@name='CollectionsKt___CollectionsKt']/method[@name='max' and count(parameter)=1 and parameter[1][@type='java.lang.Iterable&lt;java.lang.Double&gt;']]" name="managedName">MaxOfDouble</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='CollectionsKt___CollectionsKt']/method[@name='max' and count(parameter)=1 and parameter[1][@type='java.lang.Iterable&lt;java.lang.Float&gt;']]" name="managedName">MaxOfFloat</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='CollectionsKt___CollectionsKt']/method[@name='min' and count(parameter)=1 and parameter[1][@type='java.lang.Iterable&lt;java.lang.Double&gt;']]" name="managedName">MinOfDouble</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='CollectionsKt___CollectionsKt']/method[@name='min' and count(parameter)=1 and parameter[1][@type='java.lang.Iterable&lt;java.lang.Float&gt;']]" name="managedName">MinOfFloat</attr>

  <attr path="/api/package[@name='kotlin.collections']/class[@name='CollectionsKt___CollectionsKt']/method[@name='maxOrNull' and count(parameter)=1 and parameter[1][@type='java.lang.Iterable&lt;java.lang.Double&gt;']]" name="managedName">MaxOrNullOfDouble</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='CollectionsKt___CollectionsKt']/method[@name='maxOrNull' and count(parameter)=1 and parameter[1][@type='java.lang.Iterable&lt;java.lang.Float&gt;']]" name="managedName">MaxOrNullOfFloat</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='CollectionsKt___CollectionsKt']/method[@name='minOrNull' and count(parameter)=1 and parameter[1][@type='java.lang.Iterable&lt;java.lang.Double&gt;']]" name="managedName">MinOrNullOfDouble</attr>
  <attr path="/api/package[@name='kotlin.collections']/class[@name='CollectionsKt___CollectionsKt']/method[@name='minOrNull' and count(parameter)=1 and parameter[1][@type='java.lang.Iterable&lt;java.lang.Float&gt;']]" name="managedName">MinOrNullOfFloat</attr>

  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='drop' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='dropLast' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='dropLastWhile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='dropWhile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='filter' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='filterIndexed' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function2&lt;? super java.lang.Integer, ? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='filterNot' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='onEach' and count(parameter)=2 and parameter[1][@type='S'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, kotlin.Unit&gt;']]/typeParameters" />
  <attr path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='onEach' and count(parameter)=2 and parameter[1][@type='S'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, kotlin.Unit&gt;']]/parameter[1]" name="type">java.lang.CharSequence</attr>
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='slice' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.ranges.IntRange']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='take' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='takeLast' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='takeLastWhile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='takeWhile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt___StringsKt']/method[@name='onEachIndexed' and count(parameter)=2 and parameter[1][@type='S'] and parameter[2][@type='kotlin.jvm.functions.Function2&lt;? super java.lang.Integer, ? super java.lang.Character, kotlin.Unit&gt;']]" />>
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='padEnd' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='char']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='padStart' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='char']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='removePrefix' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.CharSequence']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='removeSuffix' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.CharSequence']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='removeSurrounding' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.CharSequence']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='removeSurrounding' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.CharSequence'] and parameter[3][@type='java.lang.CharSequence']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='trim' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='char...']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='trim' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='trimEnd' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='char...']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='trimEnd' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='trimStart' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='char...']]" />
  <remove-node path="/api/package[@name='kotlin.text']/class[@name='StringsKt__StringsKt']/method[@name='trimStart' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='kotlin.jvm.functions.Function1&lt;? super java.lang.Character, java.lang.Boolean&gt;']]" />

  <remove-node path="/api/package[@name='kotlin.time']/class[@name='Duration']/method[@name='div-LRDsOJo' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]" />

  <!-- fix companions -->
  <attr path="/api/package/class[substring(@name,string-length(@name)-9)='.Companion']" name="managedName">CompanionStatic</attr>
  <remove-node path="/api/package/class[substring(@name,string-length(@name)-9)='.Companion' and count(method)=0 and count(field)=0]" />
  <attr path="/api/package/class[substring(@name,string-length(@name)-7)='.Default']" name="managedName">DefaultStatic</attr>
  <remove-node path="/api/package/class[substring(@name,string-length(@name)-7)='.Default' and count(method)=0 and count(field)=0]" />

</metadata>
