
trigger:
  - master
  - refs/tags/*

variables:
  MONO_VERSION: 5_18_1
  XCODE_VERSION: 10.3
  VERBOSITY: diagnostic
  DOTNET_CORE_VERSION: 2.2.401
  CAKE_VERSION: 0.34.1
  API_TOOLS_VERSION: 1.0.2-preview.14
  MASTER_BRANCH: master

resources:
  repositories:
    - repository: xamarin-components
      type: github
      name: xamarin/XamarinComponents
      endpoint: xamarin
      ref: refs/heads/dev/templating

jobs:

  - template: templates/sign.yml@xamarin-components
    parameters:
      signTags: True
      forceSignVariable: 'CodeSign'
      additionalConditions: 'build'

  # - template: templates/prepare.yml@xamarin-components
  #   parameters:
  #     masterBranchName: $(MASTER_BRANCH)

  # - job: build
  #   strategy:
  #     matrix:
  #       macos:
  #         imageName: 'Hosted macOS'
  #       windows:
  #         imageName: 'Hosted Windows 2019 with VS2019'
  #   displayName: 'Build'
  #   dependsOn: prepare
  #   variables:
  #     GitLastSuccessfulCommit: $[ dependencies.prepare.outputs['lastSuccessful.GitLastSuccessfulCommit'] ]
  #   pool:
  #     name: $(imageName)
  #   steps:
  #     - bash: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(MONO_VERSION)
  #       displayName: 'Switch to the latest Xamarin SDK'
  #       condition: eq(variables['System.JobName'], 'macos')
  #     - bash: echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'/Applications/Xcode_$(XCODE_VERSION).app;sudo xcode-select --switch /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer
  #       displayName: 'Switch to the latest Xcode'
  #       condition: eq(variables['System.JobName'], 'macos')
  #     - bash: echo '##vso[task.setvariable variable=PATH;]'$PATH:$HOME/.dotnet/tools
  #       displayName: 'Add ~/.dotnet/tools to the PATH environment variable'
  #       condition: eq(variables['System.JobName'], 'macos')
  #     - task: UseDotNet@2
  #       displayName: 'Use the correct version of the .NET Core SDK'
  #       inputs:
  #         version: $(DOTNET_CORE_VERSION)
  #     - powershell: |
  #         dotnet tool install -g api-tools --version $(API_TOOLS_VERSION)
  #         dotnet tool install -g cake.tool --version $(CAKE_VERSION)
  #       displayName: 'Install .NET Core global tools'
  #     - task: NuGetToolInstaller@1
  #       inputs:
  #         checkLatest: true
  #       displayName: 'Download the latest nuget.exe'
  #     - powershell: dotnet cake --target=build --gitpreviouscommit=$(GitLastSuccessfulCommit) --gitcommit=$(Build.SourceVersion) --forcebuild=$(ForceBuild) --names="$(BuildManifestNames)" --targets="$(BuildManifestTargets)" --copyoutputtoroot=true --verbosity=$(VERBOSITY)
  #       displayName: 'Run build'
  #       env:
  #         JavaSdkDirectory: $(JAVA_HOME)
  #     - powershell: |
  #         if (Get-ChildItem artifacts -Filter *.nupkg) {
  #           api-tools nuget-diff artifacts --latest --group-ids --output artifacts/api-diff --cache externals/package_cache
  #         }
  #       displayName: 'API diff'
  #     - task: PublishBuildArtifacts@1
  #       displayName: 'Publish artifacts'
  #       inputs:
  #         PathToPublish: artifacts
  #         ArtifactName: nuget

  # - template: templates/sign.yml@xamarin-components
  #   parameters:
  #     dependsOn: 'build'